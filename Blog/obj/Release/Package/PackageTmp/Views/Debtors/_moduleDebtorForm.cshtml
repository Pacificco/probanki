@using Bankiru.Models.Domain.Debtors
@using Bankiru.Models.Domain
@model VM_Debtor
@{
    AjaxOptions _ajaxOptions = new AjaxOptions();
    _ajaxOptions.HttpMethod = "POST";
    _ajaxOptions.InsertionMode = InsertionMode.Replace;
    //_ajaxOptions.LoadingElementDuration = 3000;
    _ajaxOptions.LoadingElementId = "spinning-form-debtor";
    //_ajaxOptions.OnSuccess = "";
    //_ajaxOptions.OnFailure = "";
    _ajaxOptions.UpdateTargetId = "wrapper-debtor-form";
    _ajaxOptions.Url = "Debtors/Debtor";    
}

<p>Для подачи объявления заполните поля в форме ниже (поля, отмеченные звездочкой, обязательны для заполнения)</p>

@if (Model.EditState == EnumEditState.Created)
{
    <div class="success-mes">
        <p>Ваша заявка успешно отправлена! После модерации она будет размещена на сайте.</p>
    </div>
}

@using (Ajax.BeginForm("Debtor", "Debtors", _ajaxOptions, htmlAttributes: new { id = "form-debtor" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <table id="debtor-form">
        <tr>
            <td>
                <div class="editor-field editor-field-debtor-type">
                    @Html.LabelFor(model => model.DebtorType)
                    @Html.Action("_getDebtorTypesDropDownList", "Debtors", new
       {
           selectedId = Model.DebtorType,
           firstItem = EnumFirstDropDownItem.All,
           id = "DebtorType"
       })
                    @Html.ValidationMessageFor(model => model.DebtorType)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-debt-amount">
                    @Html.LabelFor(model => model.DebtAmount)
                    @Html.EditorFor(model => model.DebtAmount)
                    @Html.ValidationMessageFor(model => model.DebtAmount)
                </div>
            </td>
            <td rowspan="2">
                <div class="editor-field editor-field-comment">
                    @Html.LabelFor(model => model.Comment)
                    @Html.EditorFor(model => model.Comment)
                    @Html.ValidationMessageFor(model => model.Comment)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field editor-field-original-creditor">
                    @Html.LabelFor(model => model.OriginalCreditorType)
                    @Html.Action("_getOriginalCreditorTypesDropDownList", "Debtors", new
       {
           selectedId = Model.OriginalCreditorType,
           firstItem = EnumFirstDropDownItem.All,
           id = "OriginalCreditorType"
       })
                    @Html.ValidationMessageFor(model => model.OriginalCreditorType)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-saleprice">
                    @Html.LabelFor(model => model.SalePrice)
                    @Html.EditorFor(model => model.SalePrice)
                    @Html.ValidationMessageFor(model => model.SalePrice)
                </div>
            </td>
            @*<td></td>*@
        </tr>
        <tr>
            <td>
                <div class="editor-field editor-field-region">
                    @Html.LabelFor(model => model.RegionId)
                    @Html.Action("_getRegionsDropDownList", "Debtors", new
       {
           selectedId = Model.RegionId,
           firstItem = EnumFirstDropDownItem.All,
           id = "RegionId"
       })
                    @Html.ValidationMessageFor(model => model.RegionId)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-seller-type">
                    @Html.LabelFor(model => model.DebtSellerType)
                    @Html.Action("_getDebtSellerTypesDropDownList", "Debtors", new
       {
           selectedId = Model.DebtSellerType,
           firstItem = EnumFirstDropDownItem.All,
           id = "DebtSellerType"
       })
                    @Html.ValidationMessageFor(model => model.DebtSellerType)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-agreement-accept">                    
                    @Html.EditorFor(model => model.AgreementAccept)
                    Я даю согласие на обработку персональных данных
                    @Html.ValidationMessageFor(model => model.AgreementAccept)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field editor-field-locality">
                    @Html.LabelFor(model => model.Locality)
                    @Html.EditorFor(model => model.Locality)
                    @Html.ValidationMessageFor(model => model.Locality)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-contact-person">
                    @Html.LabelFor(model => model.ContactPerson)
                    @Html.EditorFor(model => model.ContactPerson)
                    @Html.ValidationMessageFor(model => model.ContactPerson)
                </div>
            </td>
            <td rowspan="2">
                <div class="editor-field">
                @Html.LabelFor(model => model.CaptchaCode)
                <div id="captcha-block">
                    @Html.Action("_getModuleCaptchaBlock")
                </div>
                <input class="text-box single-line" data-val="true" data-val-required="Код с картинки указан не верно!" id="CaptchaCode" name="CaptchaCode" type="text" value="" autocomplete="off" />
                @Html.ValidationMessageFor(model => model.CaptchaCode)
            </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field editor-field-essence-type">
                    @Html.LabelFor(model => model.DebtEssenceType)
                    @Html.Action("_getDebtEssenceTypesDropDownList", "Debtors", new
       {
           selectedId = Model.DebtEssenceType,
           firstItem = EnumFirstDropDownItem.All,
           id = "DebtEssenceType"
       })
                    @Html.ValidationMessageFor(model => model.DebtEssenceType)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-contact-phone">
                    @Html.LabelFor(model => model.ContactPhone)
                    @Html.EditorFor(model => model.ContactPhone)
                    @Html.ValidationMessageFor(model => model.ContactPhone)
                </div>
            </td>
            @*<td>
                
            </td>*@
        </tr>
        <tr>
            <td>
                <div class="editor-field editor-field-court-decision">
                    @Html.LabelFor(model => model.CourtDecisionType)
                    @Html.Action("_getCourtDecisionTypesDropDownList", "Debtors", new
       {
           selectedId = Model.CourtDecisionType,
           firstItem = EnumFirstDropDownItem.All,
           id = "CourtDecisionType"
       })
                    @Html.ValidationMessageFor(model => model.CourtDecisionType)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-dop-phone">
                    @Html.LabelFor(model => model.DopPhone)
                    @Html.EditorFor(model => model.DopPhone)
                    @Html.ValidationMessageFor(model => model.DopPhone)
                </div>
            </td>
            <td>
            <div class="editor-field editor-field-submit">
                <input type="submit" value="Отправить" class="button-ok" />
            </div>
                </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field editor-field-locality">
                    @Html.LabelFor(model => model.DebtCreatedDate)
                    <input class="text-box single-line" data-val="true" data-val-date="Поле 'Дата образования долга' должно содержать дату!" data-val-required="Поле 'Дата образования долга' не заполнено!" id="DebtCreatedDate" name="DebtCreatedDate" type="date" value="@Model.DebtCreatedDate.ToString("yyyy-MM-dd")">
                    @Html.ValidationMessageFor(model => model.DebtCreatedDate)
                </div>
            </td>
            <td>
                <div class="editor-field editor-field-contact-email">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </td>
            <td>
                <p>Текст</p>
            </td>
        </tr>
    </table>           
}
