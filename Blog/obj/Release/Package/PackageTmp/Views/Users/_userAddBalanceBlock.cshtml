@model Bankiru.Models.Domain.Users.VM_UserAddBalance
@{
    AjaxOptions option = new AjaxOptions()
    {
        HttpMethod = "post",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "user-add-balance-block",
        LoadingElementId = "spinning-balance-submit",
        Url = "/lk/" + Model.UserId.ToString() + "/AddBalanceAjax",
        OnComplete = "add_balance_success"
    };
}
@*<div id="user-add-balance-block">*@
    @using (Ajax.BeginForm("AddBalance", "Users", option, new { id = "form-add-balance" }))
    {        
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId)

        <div class="stat-block">
            <h2>Продление подписки и смена тарифа</h2>
            <div class="stat-block-body">
                <div class="editor-row">
                    <div class="editor-column">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TariffId)
                        </div>
                        <div class="editor-field">
                            @Html.Action("_getTariffDropDownList", "Users", new
                           {
                               selectedId = Model.TariffId,
                               firstItem = Bankiru.Models.Domain.EnumFirstDropDownItem.NotSelected,
                               id = "TariffId"
                           })                           
                        </div>                        
                    </div>

                    <div class="editor-column">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PeriodId)
                        </div>
                        <div class="editor-field">
                            @Html.Action("_getTariffPeriodDropDownList", "Users", new
                           {
                               selectedId = Model.TariffId,
                               firstItem = Bankiru.Models.Domain.EnumFirstDropDownItem.NotSelected,
                               id = "PeriodId"
                           })
                        </div>                        
                    </div>

                    <div class="editor-column">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Sum)
                        </div>
                        <div class="editor-field">
                            @*@Html.EditorFor(model => model.Sum, new { @readonly = "readonly" })*@
                            <input class="text-box single-line input-validation-error" data-val="true" data-val-required="Вы не указали сумму!" id="Sum" name="Sum" type="text" value="0" readonly>
                        </div>                        
                    </div>

                    <div class="editor-column">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Comment)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Comment)
                        </div>
                    </div>
                </div>

                @Html.ValidationMessageFor(model => model.TariffId)
                @Html.ValidationMessageFor(model => model.PeriodId)
                @Html.ValidationMessageFor(model => model.Sum)
                @Html.ValidationMessageFor(model => model.Comment)
                @Html.ValidationSummary(true)

                <div class="editor-row">
                    <div class="editor-field">
                        <input type="submit" value="Оформить подписку" class="button-ok" />
                        <img src="~/Content/system/spinning.gif" title="Подождите..." class="indicator" id="spinning-balance-submit" />
                    </div>
                </div>

                @if (!String.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <p id="SuccessMessage">Запрос на продление подписки успешно отправлен!</p>
                }
            </div>
        </div>     
    }
@*</div>*@
