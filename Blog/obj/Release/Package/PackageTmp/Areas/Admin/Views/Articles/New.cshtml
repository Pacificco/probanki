@using Bankiru.Models.Domain
@model Bankiru.Models.Domain.Articles.VM_Article
@{
    ViewBag.Title = "Создание новой публикации";
    Layout = "~/Areas/Admin/Views/Shared/MasterAdmin.cshtml";
}
@section styles {
    @Styles.Render("~/Content/admin/arts/css")
    @*<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">*@
}
<div class="back-to-list">
    @Html.ActionLink("Вернуться к списку", "List")
</div>
<div id="art-editor">
    @using (Html.BeginForm("New", "Articles", FormMethod.Post))
    {
        @Html.ValidationSummary(true)            
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Alias)        

        <div class="editor-title">
            <div class="editor-field">
                @Html.EditorFor(model => model.IsActive) @Html.LabelFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IsCentral) @Html.LabelFor(model => model.IsCentral)
                @Html.ValidationMessageFor(model => model.IsCentral)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.CentralNumber)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CentralNumber)
                @Html.ValidationMessageFor(model => model.CentralNumber)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PublishedAt)
            </div>
            <div class="editor-field">
                <input class="text-box single-line" data-val="true" data-val-date="Поле Дата публикации должно содержать дату." data-val-required="Требуется поле Дата публикации." id="PublishedAt" name="PublishedAt" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                @Html.ValidationMessageFor(model => model.PublishedAt)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
            <div class="editor-field editor-field-alias">
                Ссылка: <span>Формируется автоматически</span>
            </div>
        </div>
        <div class="editor-lists">
            <div class="editor-label">
                @Html.LabelFor(model => model.CategoryId)
            </div>
            <div class="editor-field">
                @Html.Action("_getCategoriesDropDownList", "Articles", new
                   {
                       selectedId = Model.CategoryId,
                       firstItem = EnumFirstDropDownItem.NotSelected,
                       id = "CategoryId"
                   })
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
        </div>
        <div class="editor-main">
            <div class="editor-label">
                @Html.LabelFor(model => model.SubTitle)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SubTitle)
                @Html.ValidationMessageFor(model => model.SubTitle)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.TextPrev)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TextPrev)
                @Html.ValidationMessageFor(model => model.TextPrev)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.TextFull)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TextFull)
                @Html.ValidationMessageFor(model => model.TextFull)
            </div>
            @*<div class="editor-label">
                @Html.LabelFor(model => model.OtherUser)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.OtherUser)
                @Html.ValidationMessageFor(model => model.OtherUser)
            </div>*@
            @*<div class="editor-label">
                @Html.LabelFor(model => model.PublishedAt)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PublishedAt)
                @Html.ValidationMessageFor(model => model.PublishedAt)
            </div>*@
            <div class="editor-label">
                @Html.LabelFor(model => model.Hits)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Hits)
                @Html.ValidationMessageFor(model => model.Hits)
            </div>
        </div>
        <div class="editor-meta">
            <div class="editor-label">
                @Html.LabelFor(model => model.MetaTitle)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MetaTitle)
                @Html.ValidationMessageFor(model => model.MetaTitle)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.MetaDesc)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MetaDesc)
                @Html.ValidationMessageFor(model => model.MetaDesc)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.MetaKeys)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MetaKeys)
                @Html.ValidationMessageFor(model => model.MetaKeys)
            </div>            
            <div class="editor-field">
                @Html.EditorFor(model => model.MetaNoIndex) @Html.LabelFor(model => model.MetaNoIndex)
                @Html.ValidationMessageFor(model => model.MetaNoIndex)
            </div>            
            <div class="editor-field">
                @Html.EditorFor(model => model.MetaNoFollow) @Html.LabelFor(model => model.MetaNoFollow)
                @Html.ValidationMessageFor(model => model.MetaNoFollow)
            </div>
        </div>        
        <div class="editor-field">
            <input type="submit" value="Сохранить" />
        </div>
    }
</div>
@section scripts{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: '#TextPrev',
            language: "ru_RU",
            height: "400",
            plugins: "image imagetools code link"
        });
        tinymce.init({
            selector: '#TextFull',
            language: "ru_RU",
            height: "400",
            plugins: "image imagetools code link"
        });
    </script>
    <script src="http://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#PublishedAt").datepicker({
                minDate: -20,
                maxDate: "+1M",
                dateFormat: "dd-mm-yy"
            });
        });
    </script>
}
