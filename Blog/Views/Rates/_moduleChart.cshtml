@using System.Globalization
@using Bankiru.Models.OutApi
@model List<ChartObject>
@{    
    string lineData = "";
    NumberFormatInfo _numberFormatInfo = new NumberFormatInfo() { NumberDecimalSeparator = "." };
    foreach (var obj in Model)
    {
        lineData += String.Format(", [new Date({0},{1},{2}),{3}]",
            obj.Date.Year,
            obj.Date.Month - 1,
            obj.Date.Day,
            obj.Close.ToString("N", _numberFormatInfo));
            //"Tooltips");
            //obj.Date.ToString("dd.MM.yyyy<br />", CultureInfo.CreateSpecificCulture("ru-RU")) + obj.Close.ToString("N", _numberFormatInfo));
    }
    decimal maxValue = 0m;
    decimal minValue = 0m;
    if (!String.IsNullOrEmpty(lineData))
    {
        lineData = lineData.Substring(2);
        maxValue = (from m in Model select m.Close).Max();
        minValue = (from m in Model select m.Close).Min();
    }

    //lineData = "[new Date(2017,02,02),5],[new Date(2017,01,30),10]";

    string lineColor = "#da9627";
    string lineBackColor = "#ffffe6";
    string chartTitle = "Динамика за последние 3 месяца";
    if (Model != null && Model.Count > 0)
    {
        switch (Model.First().SubjectId)
        {
            case 1:
                lineColor = "#741d88";
                lineBackColor = "#ffebff";
                chartTitle = "Динамика курса Доллара за последние 3 месяца";
                break;
            case 2:
                lineColor = "#2195c9";
                lineBackColor = "#f0faff";
                chartTitle = "Динамика курса Евро за последние 3 месяца";
                break;
            case 3:
                lineColor = "#da9627";
                lineBackColor = "#ffffe6";
                chartTitle = "Динамика курса Роснефти за последние 3 месяца";
                break;
            case 4:
                lineColor = "#17a668";
                lineBackColor = "#ebfff5";
                chartTitle = "Динамика акций Сбербанка за последние 3 месяца";
                break;
        }
    }
}
@if (Model != null && Model.Count > 0)
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        google.charts.load('current', { packages: ['corechart', 'line'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = new google.visualization.DataTable();
            data.addColumn('date', 'Дата');
            data.addColumn('number', 'Стоимость');
            //data.addColumn({ type: 'string', role: 'tooltip' });

            data.addRows([@lineData]);

            var options = {
                hAxis: {
                    title: 'Временная шкала',
                    format: 'dd.MM.yy'
                },
                vAxis: {
                    title: 'Стоимость'
                },
                title: '@chartTitle',
                tooltip: {
                    format: 'dd.MM.yy'
                },
            legend: { position: 'none' },
            width: 620,
            height: 300,
            backgroundColor: '@lineBackColor',
            colors: ['@lineColor'],
            series: {
                0: {
                    lineWidth: 2
                }
            },
            tooltip: { isHtml: true }
            };
            var chart = new google.visualization.LineChart(document.getElementById('chart_@Model.First().SubjectId'));

        chart.draw(data, options);

    }
    </script>

    <div class="forecast-chart">
        @if(Model == null || Model.Count == 0)
        {
            <div id="chart_div"></div>
        }
        else
        {
            <div id="chart_@Model.First().SubjectId"></div>
        }
        <div class="stat-info">
            Максимум: <span>@maxValue</span><br />
            Минимум: <span>@minValue</span>
        </div>
    </div>
    
}