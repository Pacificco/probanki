@model Bankiru.Models.Domain.Home.VM_Feedback
@{
    ViewBag.metaTitle = "Правила сайта ProBanki.net";
    ViewBag.metaDescription = "";
    ViewBag.metaKeywords = "";
    ViewBag.metaRobots = "noindex, nofollow";

    Layout = "~/Views/Shared/Master.cshtml";
    ViewBag.CurrentMenuItem = "feedback";

    string mes = Model == null ? "?" : Model.CaptchaCode;        
}
@{
    List<SelectListItem> _items = new List<SelectListItem>();
    _items.Add(new SelectListItem()
    {
        Text = "Общие вопросы",
        Value = "question",
        Selected = true
    });
    _items.Add(new SelectListItem()
    {
        Text = "Техническая поддержка",
        Value = "support",
        Selected = false
    });
    _items.Add(new SelectListItem()
    {
        Text = "По вопросам рекламы",
        Value = "marketing",
        Selected = false
    });
    _items.Add(new SelectListItem()
    {
        Text = "По вопросам размещения статей",
        Value = "publication",
        Selected = false
    });
}
@section left_top
{
    @Html.Action("_getModuleOrgMenu", "Home")
}
@section left_middle
{
    @Html.Action("_getModuleLastComments", "Home", new { show_article_link = true })
}
@section right_middle
{
    @Html.Action("_getModuleLastNews", "Home")
}
@{
    var attr = new Dictionary<string, object>();
    attr.Add("Id", "form-feedback");
    attr.Add("enctype", "multipart/form-data");
}
<section id="feedback">
    <hgroup>
        <h1>
            <span>Форма обратной связи</span>
        </h1>
        <h2>Вы можете направить нам свои вопросы, предложения или замечания.</h2>
    </hgroup>
    @using (Html.BeginForm("feedback", "Home", FormMethod.Post, attr))
    {
        @Html.ValidationSummary(true)            
        @Html.AntiForgeryToken()            
                        
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Subject, _items)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>               
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Message)
            @Html.ValidationMessageFor(model => model.Message)
        </div>
            
        <div class="editor-label">
            <span>Вы можете прикрепить файл к своему сообщению</span>
        </div>            
            <div class="editor-field">
                <input type="file" id="MessageFile" name="MessageFile" />
            </div>
        
        <div class="editor-field">
            @Html.LabelFor(model => model.CaptchaCode)<br />
            <img id="mainCaptchaIframe" src="@Url.Action("ShowCaptchaImage", "Home", null)" title="Контрольная строка" alt="Контрольная строка" />
            <img id="imgCaptchaRefresh" onclick="refreshCaptchaImage()" src="~/Content/system/refresh.png" /><br />
            @*@Html.EditorFor(model => model.CaptchaCode)*@
            <input class="text-box single-line valid" data-val="true" data-val-required="Вам необходимо ввести текст с картинки!" id="CaptchaCode" name="CaptchaCode" type="text" value="">
            @Html.ValidationMessageFor(model => model.CaptchaCode)
        </div>
                    
        <div class="editor-field editor-field-submit">
            <input type="submit" value="Отправить сообщение" />
        </div>
    }
</section>
